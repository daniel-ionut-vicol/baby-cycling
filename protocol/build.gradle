buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "net.ltgt.gradle:gradle-apt-plugin:0.10"
  }
}

apply plugin: "net.ltgt.apt"

sourceSets {
    generated{
         java.srcDir "${buildDir}/generated/src/java/"
     }
 }

dependencies {
	
    compile project (':protocol.core')
	
	testCompile project(':protocol.core').sourceSets.test.output

	apt files('../annotation.processor/build/libs/annotation.processor-all.jar')
}

tasks.withType(JavaCompile) {
	 options.fork = true
}

task generate(type: JavaCompile) {
    // we need to make sure that annotation processor jar was created
    dependsOn ':annotation.processor:fatJar'
    classpath = sourceSets.main.compileClasspath + configurations.compile + configurations.apt
    source = sourceSets.main.java.srcDirs
    destinationDir = file("${buildDir}/classesGenerated")
    generatedSourcesDestinationDir = file("${buildDir}/generated/src/java/")
}

compileJava {
    dependsOn 'generate'
    aptOptions.annotationProcessing = false
    source = sourceSets.main.java.srcDirs + sourceSets.generated.java.srcDirs
}

compileGeneratedJava{
    dependsOn 'generate'
    aptOptions.annotationProcessing = false
    classpath = sourceSets.main.output + configurations.compile
}

jar
{
    from sourceSets.generated.output
    from sourceSets.main.output
    dependsOn compileJava
    dependsOn compileGeneratedJava
}

task printSources {
    println "Sources : " + sourceSets.main.java.srcDirs + sourceSets.generated.java.srcDirs
}
